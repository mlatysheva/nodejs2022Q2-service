// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @default(uuid())
  login String @unique
  hash String?
  version Int @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt @default(now())

  @@map("users")
}

model Album {
  id String @id @default(uuid())
  name String
  year Int
  artistId String?
  artist Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  tracks Track[]
  favoriteId String?
  favs Favorite? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)

  @@map("albums")
}

model Artist {
  id String @id @default(uuid())
  name String
  grammy Boolean
  albums Album[]
  tracks Track[]
  favoriteId String?
  favs Favorite? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)

  @@map("artists")
}

model Track {
  id String @id @default(uuid())
  name String
  duration Int
  artistId String?
  artist Artist? @relation(fields: [artistId], references: [id], onDelete: SetNull)
  albumId String?
  album Album? @relation(fields: [albumId], references: [id], onDelete: SetNull)
  favoriteId String?
  favs Favorite? @relation(fields: [favoriteId], references: [id], onDelete: SetNull)

  @@map("tracks")
}

model Favorite {
  id String @id @default(uuid())
  artists Artist[]
  albums Album[]
  tracks Track[]

  @@map("favs")
}
